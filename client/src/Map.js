import React, { Component } from 'react'
import MapboxGl from 'mapbox-gl/dist/mapbox-gl.js'
import PropTypes from 'prop-types';
import Vehicles from './Vehicles';
import MapboxLanguageControl from '@mapbox/mapbox-gl-language';

export default class Map extends Component {

  static childContextTypes = {
    map: PropTypes.object
  }

  state = {
    map: null
  }

  getChildContext = () => ({
    map: this.state.map
  })

  componentDidMount() {
    MapboxGl.accessToken = "pk.eyJ1IjoiYWxscnlkZXIiLCJhIjoidWs5cUFfRSJ9.t8kxvO3nIhCaAl07-4lkNw"

    const map = new MapboxGl.Map({
      container: this.container,
      style: 'mapbox://styles/mapbox/streets-v10'
    })

    map.jumpTo({ center: [127.297758, 36.486779], zoom: 13 })

    map.addControl(new MapboxLanguageControl({defaultLanguage: 'ko'}))

    // map.on('load', (...args) => {
    //   this.setState({ map })
    // })

    map.on('load', () => {
      map.addSource('route', {
        'type': 'geojson',
        'data': {
        'type': 'Feature',
        'properties': {},
        'geometry': {
        'type': 'LineString',
        'coordinates': [
            [127.28631967512463, 36.47945950886893],
            [127.2873367503742, 36.47989863165482],
            [127.28822529322628, 36.480279480970346],
            [127.28908589726528, 36.48064687394679],
            [127.29054448079532, 36.48127188907005],
            [127.29121788074727, 36.48155636514099],
            [127.29191369670907, 36.481865564387846],
            [127.2921652411204, 36.48198885793981],
            [127.2923525621923, 36.4820965380626],
            [127.29249241516538, 36.48219306977968],
            [127.29259023536983, 36.48224014073806],
            [127.29268521506783, 36.48227370122027],
            [127.29272456864575, 36.48235245596953],
            [127.29279741672619, 36.48243563431124],
            [127.2932030311696, 36.48272526164005],
            [127.29345231732995, 36.482988237394075],
            [127.2940013839911, 36.483586155478335],
            [127.29430962012586, 36.483943605642594],
            [127.2945254442415, 36.4842089145049],
            [127.29480567564822, 36.484537144853554],
            [127.29511396198357, 36.484905857206705],
            [127.29573335046834, 36.48564777824298],
            [127.2959295348376, 36.48588159265295],
            [127.29601884630522, 36.485890382692425],
            [127.29609721247549, 36.48595552212967],
            [127.29609476549213, 36.486045643887024],
            [127.29606999056263, 36.48613356815357],
            [127.29647972268845, 36.486763360557475],
            [127.29689537668484, 36.48748099950984],
            [127.29727440691269, 36.4881041067285],
            [127.29737276270885, 36.48828859872823],
            [127.29745664352899, 36.48833570036601],
            [127.29747383145262, 36.48845280785662],
            [127.29790896492143, 36.489152371345256],
            [127.29833575336639, 36.48985645979523],
            [127.29864162484151, 36.49031303138906],
            [127.29893607986267, 36.49070204405403],
            [127.29949702825881, 36.491462114179846],
            [127.29955864493878, 36.49152278752689],
            [127.29964796327798, 36.49153157481],
            [127.29971225740903, 36.49156295378504],
            [127.29974046237821, 36.49164173407688],
            [127.29972133951908, 36.4917476679334],
            [127.30008007410986, 36.4921612979578],
            [127.30066308692773, 36.492849214419564],
            [127.3008537763118, 36.49309655156371],
            [127.30142524938348, 36.493683113261255],
            [127.30225156825503, 36.49450783302197],
            [127.30241124142088, 36.49466963639542],
            [127.3028454543628, 36.49511235406018],
            [127.30355132071125, 36.49580895562414],
            [127.30410042372814, 36.49637303219078],
            [127.30420960616377, 36.496465122252864],
            [127.3043104620526, 36.496568497888944],
            [127.30436066088104, 36.496561611180155],
            [127.30534934858365, 36.49608372565767],
            [127.30653570624314, 36.49549718562336],
            [127.30654671631694, 36.49545885824133],
            [127.30625733327659, 36.49495495447506],
            [127.30577179749159, 36.49423752841155],
            [127.30531428748648, 36.49354931610849],
            [127.30491576752844, 36.492960078333226],
            [127.3048511434851, 36.49284534612631],
            [127.30438261275067, 36.49218869866268],
            [127.30388040619067, 36.491480318580855],
            [127.30340052070542, 36.49076962663628],
            [127.30300197694113, 36.49016686485291],
            [127.30272985917091, 36.48978681711639],
            [127.30257555647725, 36.48956867813907],
            [127.3024575338619, 36.489352699884215],
            [127.30233078287571, 36.489044375105294],
            [127.30221800046861, 36.4887405205761],
            [127.30204543066014, 36.48812817122667],
            [127.30195230298875, 36.487855807115174],
            [127.3018592633827, 36.48760597160622],
            [127.30170190670815, 36.48731799950115],
            [127.30126120462705, 36.4866274753055],
            [127.30117693094412, 36.48647899719823],
            [127.30085707544552, 36.48601345550188],
            [127.30038586476134, 36.485365809759266],
            [127.3002905302195, 36.48524214064578],
            [127.29974694000103, 36.48463297357287],
            [127.29932651878322, 36.48412938099811],
            [127.29880287064479, 36.483623792526195],
            [127.2984782738293, 36.48337002799255],
            [127.297781677135, 36.48286712031988],
            [127.29677198906582, 36.48219602057801],
            [127.29628269684706, 36.48191337185022],
            [127.2945614527003, 36.48119220126513],
            [127.29336549725544, 36.480679234654694],
            [127.29256914637207, 36.48034100270105],
            [127.29158282408125, 36.479928884213386],
            [127.2903897224358, 36.47942263930171],
            [127.28900943595613, 36.47883798453606],
            [127.28795607486686, 36.47839220479751],
            [127.28717369394658, 36.478047144214536],
            [127.28631967512463, 36.47945950886893]
            ]
          }
        }
      })
      this.setState({ map })

      map.addLayer({
        'id': 'route',
        'type': 'line',
        'source': 'route',
        'layout': {
        'line-join': 'round',
        'line-cap': 'round'
        },
        'paint': {
        'line-color': '#3399FF',
        'line-width': 3
        }
      });
    })
  }

  render() {
    const { children } = this.props
    const { map } = this.state
    return (
      <div>
        <div className='Map' ref={(x) => { this.container = x }}>
          { map && children }
        </div>
        <Vehicles
          map={map}>
        </Vehicles>
      </div>
    )
  }
}
